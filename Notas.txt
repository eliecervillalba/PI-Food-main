DATE: Saturday, April 9/2022.
STUDENT: Eliecer Villalba Ruiz
GITHUB: https://github.com/evillalba510/PI-Food-main.git

PROJECT: FOOD

BackEnd DEVELOP:

a. Instalar node_modules en las carpetas api.
b. En la carpera api/src.
  - Crear y configurar arhivo .env con las variables de entorno del Boilerplate.
  - Cear usuario en spoonacular y obtener la API Key.
  - Configurar en el archivo .env la variable de entorno "API_KEY".
  - Crear db "food" en postgres.
  - En la carpeta Model: crear Modelos recipe.js y types.js
  - Establecer relaci贸n muchos a muchos entre los modelos Recipe y Types en db.js
  - En la carpeta Routes: crear Routes: recipe.js, recipes.js, types.js
  - En la carpeta controllers:
      * Crear apiDiet.json para almacenar las tipos de dieta y usarlas posteriormente.
      * Crear apiRecipes.json para almacenar las recetas y usarlas posteriormente.

      nota: el prop贸sito es que se puedan utilizar los JSON todas las veces que se requiera sin tener que hacer request a la API externa para evitar bloqueos autorizaci贸n de cuenta.

      * Crear dataRecipes.js donde se manejan las funciones de extracci贸n de datos del API,
        la base de datos y luego se concatenan en un array.

  - Probar las rutas en el navegador / postman:
      * localhost:3001/recipes :  para traer todas las recetas.
      * localhost:3001/recipes?name=rice : para filtrar recetas por palabra.
      * localhost:3001/recipes/716426 : para buscar receta por id.
      * localhost:3001/recipe : para insetar una receta por body en la bd.
      

TOOLS:

spoonacular
https://spoonacular.com/food-api/console#
usename: evillalba510@gmail.com
password: 12345
API Key: 6f7d9f7b224d4411a97abba0d56946be
Example request:
https://api.spoonacular.com/food/products/search?query=yogurt&apiKey=6f7d9f7b224d4411a97abba0d56946be